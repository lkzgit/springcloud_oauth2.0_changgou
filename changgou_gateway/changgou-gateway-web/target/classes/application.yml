server:
  port: 8002
spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]': #匹配所有请求
              allowedOrigins: "*" #跨域处理 允许所有的域
              allowedMethods: # 支持的方法
                - GET
                - POST
                - PUT
                - DELETE
      routes:
        - id : goods
          uri: lb://goods
          predicates:
            #- Host= kk.test.com/** //根据域名进行匹配
            - Path=/goods/**
          filters:
            - StripPrefix= 1 #去掉前缀
            #- PrefixPath=/brand  #增加一个前缀
            #局部限流过滤器
            - name: RequestRateLimiter #请求数限流 名字不能随便写 ，使用默认的facatory
              args:
                # 用于限流的键的解析器的 Bean 对象的名字。它使用 SpEL 表达式根据#{@beanName}从 Spring 容器中获取 Bean 对象。
                key-resolver:  "#{@ipKeyResolver}"
                # 令牌桶每秒填充平均速率
                redis-rate-limiter.replenishRate: 1
                # 令牌桶总容量
                redis-rate-limiter.burstCapacity: 1
                # 上面配置，表示一秒内，允许 一个请求通过，令牌桶的填充速率也是一秒钟添加一个令牌。
        - id: user
          uri: lb://user
          predicates:
            - Path=/user/**
          filters:
            - StripPrefix= 1 #去掉前缀
        - id: order
          uri: lb://order
          predicates:
            - Path=/order/**
          filters:
            - StripPrefix= 1 #去掉前缀
  redis:
    host: 123.57.248.211
    password: VIKCireqXSsbMg5G
    jedis:
      pool:
        max-active: 200
        max-wait: 200
        max-idle: 100
        min-idle: 50
    timeout: 1000
    port: 6379

eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
  instance:
    prefer-ip-address: true
management:
  endpoint:
    gateway:
      enabled: true
    web:
      exposure:
        include: true